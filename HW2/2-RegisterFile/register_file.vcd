$date
    Apr  6, 2018  16:51:49
$end
$version
    TOOL:	ncsim	10.20-s114
$end
$timescale
    10 ps
$end

$scope module simple_calculator_tb $end
$var reg       1 !    Clk  $end
$var reg       1 "    WEN  $end
$var reg       3 #    RW [2:0] $end
$var reg       3 $    RX [2:0] $end
$var reg       3 %    RY [2:0] $end
$var reg       8 &    busW [7:0] $end
$var wire      8 '    busX [7:0] $end
$var wire      8 (    busY [7:0] $end
$var reg       1 )    stop  $end
$var integer  32 *    err_count  $end

$scope module rf $end
$var wire      1 +    Clk  $end
$var wire      1 ,    WEN  $end
$var wire      3 -    RW [2:0] $end
$var wire      3 .    RX [2:0] $end
$var wire      3 /    RY [2:0] $end
$var wire      8 0    busW [7:0] $end
$var reg       8 1    busX [7:0] $end
$var reg       8 2    busY [7:0] $end
$var reg       8 3    r0_w [7:0] $end
$var reg       8 4    r1_w [7:0] $end
$var reg       8 5    r2_w [7:0] $end
$var reg       8 6    r3_w [7:0] $end
$var reg       8 7    r4_w [7:0] $end
$var reg       8 8    r5_w [7:0] $end
$var reg       8 9    r6_w [7:0] $end
$var reg       8 :    r7_w [7:0] $end
$var reg       8 ;    r0_r [7:0] $end
$var reg       8 <    r1_r [7:0] $end
$var reg       8 =    r2_r [7:0] $end
$var reg       8 >    r3_r [7:0] $end
$var reg       8 ?    r4_r [7:0] $end
$var reg       8 @    r5_r [7:0] $end
$var reg       8 A    r6_r [7:0] $end
$var reg       8 B    r7_r [7:0] $end
$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
0!
x"
bx #
bx $
bx %
bx &
bx '
bx (
x)
bx *
0+
x,
bx -
bx .
bx /
bx 0
bx 1
bx 2
bx 3
bx 4
bx 5
bx 6
bx 7
bx 8
bx 9
bx :
bx ;
bx <
bx =
bx >
bx ?
bx @
bx A
bx B
$end
#200
1"
b1 #
b10101010 &
b0 $
b0 %
b0 /
b0 .
b1 -
b10101010 0
1,
b10101010 4
#500
1!
1+
b0 ;
b10101010 <
b0 1
b0 2
b0 (
b0 '
#600
b1 $
b10 $
b11 $
b100 $
b101 $
b110 $
b111 $
b1 %
b10 %
b11 %
b100 %
b101 %
b110 %
b111 %
b111 /
b111 .
bx 1
bx 2
bx (
bx '
#1000
0!
0+
#1200
b111 #
b11111111 &
b0 $
b0 %
b0 /
b0 .
b111 -
b11111111 0
b11111111 :
b0 1
b0 2
b0 (
b0 '
#1500
1!
1+
b11111111 B
#1600
b1 $
b10 $
b11 $
b100 $
b101 $
b110 $
b111 $
b1 %
b10 %
b11 %
b100 %
b101 %
b110 %
b111 %
b111 /
b111 .
b11111111 1
b11111111 2
b11111111 (
b11111111 '
#2000
0!
0+
#2200
b0 #
b11001100 &
b0 $
b0 %
b0 /
b0 .
b0 -
b11001100 0
b11001100 3
b0 1
b0 2
b0 (
b0 '
#2500
1!
1+
#2600
b1 $
b10 $
b11 $
b100 $
b101 $
b110 $
b111 $
b1 %
b10 %
b11 %
b100 %
b101 %
b110 %
b111 %
b111 /
b111 .
b11111111 1
b11111111 2
b11111111 (
b11111111 '
#3000
0!
0+
#3200
0"
b11 #
b0 $
b0 %
b0 /
b0 .
b11 -
0,
b0 1
b0 2
b0 (
b0 '
#3500
1!
1+
#3600
b1 $
b10 $
b11 $
b100 $
b101 $
b110 $
b111 $
b1 %
b10 %
b11 %
b100 %
b101 %
b110 %
b111 %
b111 /
b111 .
b11111111 1
b11111111 2
b11111111 (
b11111111 '
#4000
0!
0+
#4500
1!
1+
#5000
