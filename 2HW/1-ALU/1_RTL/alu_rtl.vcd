$date
    Apr 12, 2018  16:40:27
$end
$version
    TOOL:	ncsim	10.20-s114
$end
$timescale
    10 ps
$end

$scope module alu_rtl_tb $end
$var reg       4 !    ctrl [3:0] $end
$var reg       8 "    x [7:0] $end
$var reg       8 #    y [7:0] $end
$var wire      1 $    carry  $end
$var wire      8 %    out [7:0] $end
$var reg       1 &    clk  $end
$var integer  32 '    i  $end

$scope module alu1 $end
$var wire      4 (    ctrl [3:0] $end
$var wire      8 )    x [7:0] $end
$var wire      8 *    y [7:0] $end
$var wire      1 $    carry  $end
$var wire      8 %    out [7:0] $end
$var wire      9 +    out0 [8:0] $end
$var wire      9 ,    out1 [8:0] $end
$var wire      9 -    out2 [8:0] $end
$var wire      9 .    out3 [8:0] $end
$var wire      9 /    out4 [8:0] $end
$var wire      9 0    out5 [8:0] $end
$var wire      9 1    out6 [8:0] $end
$var wire      9 2    out7 [8:0] $end
$var wire      9 3    out8 [8:0] $end
$var wire      9 4    out9 [8:0] $end
$var wire      9 5    out10 [8:0] $end
$var wire      9 6    out11 [8:0] $end
$var wire      9 7    out12 [8:0] $end
$var wire      9 8    out13 [8:0] $end
$var wire      9 9    out14 [8:0] $end
$var wire      9 :    out15 [8:0] $end
$var wire      9 ;    w000 [8:0] $end
$var wire      9 <    w001 [8:0] $end
$var wire      9 =    w010 [8:0] $end
$var wire      9 >    w011 [8:0] $end
$var wire      9 ?    w100 [8:0] $end
$var wire      9 @    w101 [8:0] $end
$var wire      9 A    w110 [8:0] $end
$var wire      9 B    w111 [8:0] $end
$var wire      9 C    w00 [8:0] $end
$var wire      9 D    w01 [8:0] $end
$var wire      9 E    w10 [8:0] $end
$var wire      9 F    w11 [8:0] $end
$var wire      9 G    w0 [8:0] $end
$var wire      9 H    w1 [8:0] $end
$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
bx !
bx "
bx #
x$
bx %
0&
b0 '
bx (
bx )
bx *
bx +
bx ,
b0xxxxxxxx -
b0xxxxxxxx .
b0xxxxxxxx /
b0xxxxxxxx 0
b0xxxxxxxx 1
b0xxxxxxxx 2
b0xxxxxxxx 3
b0xxxxxxxx 4
b0xxxxxxxx 5
b0xxxxxxxx 6
b0x 7
b0 8
b0 9
b0 :
bx ;
b0xxxxxxxx <
b0xxxxxxxx =
b0xxxxxxxx >
b0xxxxxxxx ?
b0xxxxxxxx @
b0x A
b0 B
bx C
b0xxxxxxxx D
b0xxxxxxxx E
b0x F
bx G
b0xxxxxxxx H
$end
#200
b0 !
b11 "
b1010 #
b1010 *
b11 )
b0 (
b10000001 6
b110 5
b1 4
b11111100 /
b0 7
b1 3
b1010000 2
b11110100 1
b1001 0
b1011 .
b10 -
b111111001 ,
b1101 +
b1101 ;
b10 <
b11110100 >
b0 A
b11111100 =
b1 ?
b110 @
b1 E
b0 F
b11111100 D
b1101 C
b1101 G
b1 H
0$
b1101 %
#500
1&
#600
b1 '
#1000
0&
#1200
b11111111 "
b1 #
b1 *
b11111111 )
b11111111 6
b11111111 5
b11111111 4
b0 /
b0 3
b10000000 2
b0 1
b11111110 0
b11111111 .
b1 -
b111111110 ,
b0 +
b0 ;
b1 <
b0 >
b0 =
b0 ?
b11111111 @
b0 E
b0 D
b0 C
b0 G
b0 H
b0 %
#1500
1&
#1600
b10 '
#2000
0&
#2200
b1111111 "
b1111111 #
b1111111 *
b1111111 )
b10111111 6
b11111110 5
b111111 4
b10000000 /
b1 7
b10000000 1
b0 0
b1111111 .
b1111111 -
b0 ,
b11111110 +
b11111110 ;
b1111111 <
b10000000 >
b1 A
b10000000 =
b11111110 @
b1 F
b10000000 D
b11111110 C
b11111110 G
b11111110 %
#2500
1&
#2600
b11 '
#3000
0&
#3200
b1 !
b1110 "
b111 #
b111 *
b1110 )
b1 (
b0 ;
b0 =
b111111 ?
b10111111 @
b0 A
b111 6
b11100 5
b111 4
b11110001 /
b0 7
b11000000 2
b11110000 1
b1001 0
b1111 .
b110 -
b111 ,
b10101 +
b111 ;
b1111 <
b11000000 >
b1001 =
b111 ?
b111 @
b0 F
b111111 E
b0 D
b0 C
b0 G
b111111 H
b111 E
b1001 D
b111 C
b111 G
b111 H
b0 %
b111 %
#3500
1&
#3600
b100 '
#4000
0&
#4200
b10 !
b11110011 "
b1001 #
b1001 *
b11110011 )
b10 (
b10101 ;
b110 <
b11110001 =
b11110000 >
b0 ?
b11100 @
b1111 C
b11000000 D
b11111001 6
b11100111 5
b11111001 4
b1100 /
b1 3
b1001000 2
b100 1
b11111010 0
b11111011 .
b1 -
b111101010 ,
b111111100 +
b111111100 ;
b1 <
b100 >
b1100 =
b1 ?
b11100111 @
b1111 G
b11100 E
b11110000 D
b110 C
b110 G
b11100 H
b1111 %
b11100111 E
b100 D
b1 C
b1 G
b11100111 H
b110 %
b1 %
#4500
1&
#4600
b101 '
#5000
0&
#5200
b111 !
b11110011 #
b11110011 *
b111 (
b111101010 ;
b11111011 <
b11111010 =
b1001000 >
b11111001 ?
b11111001 @
b100 G
b0 H
b1 7
b11110 3
b10011000 2
b1100 1
b0 0
b11110011 .
b11110011 -
b0 ,
b111100110 +
b0 ;
b11110011 <
b0 =
b10011000 >
b100 %
b11111001 E
b1001000 D
b11111011 C
b1001000 G
b10011000 D
b11110011 C
b10011000 G
b1001000 %
b10011000 %
#5500
1&
#5600
b110 '
#6000
0&
#6200
b1000 !
b10110011 #
b100 "
b100 )
b10110011 *
b1000 (
b111100110 ;
b1100 =
b1100 >
b11110 ?
b11100111 @
b1 A
b0 C
b0 D
b11110011 G
b11111001 H
b0 %
b0 7
b1011 3
b110000 2
b1001000 1
b10110111 0
b10110111 .
b0 -
b1010001 ,
b110110111 +
b10 6
b1000 5
b10 4
b11111011 /
b1000 @
b110110111 ;
b0 <
b11111011 =
b1001000 >
b1011 ?
b0 A
b11111001 %
b0 G
b1 F
b11110 E
b1100 D
b111100110 C
b111100110 G
b11110 H
b0 F
b11111011 D
b110110111 C
b1011 E
b110110111 G
b1011 H
b11110 %
b1011 %
#6500
1&
#6600
b111 '
#7000
0&
#7200
b1001 !
b10110011 "
b0 #
b0 *
b10110011 )
b1001 (
b1010001 ;
b10110111 <
b10110111 =
b110000 >
b10 ?
b10 @
b11011001 6
b1100111 5
b11011001 4
b1001100 /
b0 3
b0 2
b1001100 1
b10110011 0
b10110011 .
b110110011 ,
b110110011 +
b110110011 ;
b10110011 <
b0 >
b10110011 =
b11011001 ?
b11011001 @
b10 E
b10110111 D
b1010001 C
b1010001 G
b10 H
b11011001 E
b10110011 D
b110110011 C
b110110011 G
b11011001 H
b10 %
b11011001 %
#7500
1&
#7600
b1000 '
#8000
0&
#8200
b1010 !
b11111111 #
b11111111 *
b1010 (
b0 <
b1001100 =
b1001100 >
b0 ?
b1100111 @
b10110011 C
b0 D
b11111 3
b11111000 2
b0 1
b1001100 0
b11111111 .
b10110011 -
b110110100 ,
b110110010 +
b110110010 ;
b10110011 <
b0 >
b11111 ?
b10110011 G
b1100111 E
b1001100 D
b0 C
b0 G
b1100111 H
b0 D
b10110011 C
b10110011 G
b1100111 %
#8500
1&
#8600
b1001 '
#9000
0&
#9200
b1100 !
b10110011 #
b10110011 *
b1100 (
b110110010 C
b1001100 D
b11111 E
b0 G
b0 H
b1 7
b10110 3
b10011000 2
b1001100 1
b0 0
b10110011 .
b0 ,
b101100110 +
b101100110 ;
b1001100 >
b10110 ?
b1 A
b0 %
b1001100 G
b1 F
b10110 E
b101100110 C
b1 H
b1 %
#9500
1&
#9600
b1010 '
#10000
0&
#10200
b10100011 #
b10100011 *
b0 7
b10100 3
b11000 2
b10000 0
b10100011 -
b10000 ,
b101010110 +
b101010110 ;
b10100011 <
b10100 ?
b0 A
b0 F
b10100 E
b101010110 C
b0 H
b0 %
#10500
1&
#10600
b1011 '
#11000
0&
#11200
b1110 !
b10101111 #
b10101111 *
b1110 (
b10100011 C
b1100111 E
b10101 3
b1111000 2
b1000000 1
b11100 0
b10111111 .
b100 ,
b101100010 +
b101100010 ;
b1000000 >
b10101 ?
b1000000 D
b1000000 G
#11500
1&
#11600
b1100 '
#12000
0&
